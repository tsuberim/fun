===
integer
===
42
---
(source_file (int))

===
comment
===
42 # some comment
---
(source_file (int))

===
string
===
`foo`
---
(source_file (str (lit_str)))

===
string template
===
`{2} bananas`
---
(source_file (str (int) (lit_str)))

===
variable
===
my_var
---
(source_file (var))

===
symbol
===
$@$
---
(source_file (sym))

===
function application
===
foo(1,`bar`)
---
(source_file (app (var) (int) (str (lit_str))))

===
infix function application
===
a $@$ b
---
(source_file (iapp (var) (sym) (var)))

===
function declaration
===
\x, y, z -> 42
---
(source_file (lam (var) (var) (var) (int)))

===
record
===
{name: `Matan`, age: 28}
---
(source_file (rec (var) (str (lit_str)) (var) (int)))

===
property
===
x.name
---
(source_file (prop (var) (var)))

===
constructor
===
Celsius 42
---
(source_file (cons (cons_name) (int)))

===
constructor with no payload
===
False
---
(source_file (cons (cons_name)))

===
when
===
when x is Person h -> h else 5
---
(source_file (when (var) (cons_name) (var) (var) (int)))

===
list
===
[1,`asdf`, Celsius 42]
---
(source_file (list (int) (str (lit_str)) (cons (cons_name) (int))))

===
list at index
===
[1,`asdf`, Celsius 42] @ 4
---
(source_file (iapp (list (int) (str (lit_str)) (cons (cons_name) (int))) (sym) (int)))


===
parenthesis
===
(4)
---
(source_file (block (int)))

===
block
===
(
    a = 4
    b <- a
    b
)
---
(source_file (block (assign (var) (int)) (bind (var) (var)) (var)))


===
inline block
===
(a = 4 \ b = a \ b)
---
(source_file (block (assign (var) (int)) (assign (var) (var)) (var)))

===
import
===
import foo from `foo`
foo
---
(source_file (import (var) (lit_str))  (var))




